version: 2
aliases:
- &docker-login
  name: Docker login
  command: |
    echo 'export GCLOUD_SERVICE_KEY="$DOCKER_PASSWORD"' >> $BASH_ENV
    /tools/docker_login.sh
- &post-hook
  name: Notify about build and docker image pushed
  command: |
    echo 'export CIRCLE_PROJECT_REPONAME="$DOCKER_PASSWORD"' >> $BASH_ENV
    echo 'export CIRCLE_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
    echo 'export BUILD_STATUS_API_KEY="$BUILD_STATUS_API_KEY"' >> $BASH_ENV
    /tools/build_notify.sh
jobs:
  build:
    docker:
    - image: $DOCKER_REGISTRY/circleci-toolbox-image-java11
      auth:
        username: _json_key
        password: $DOCKER_PASSWORD
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
    - checkout
    - restore_cache:
        key: dep-cache-{{ checksum "pom.xml" }}
    - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s /tools/m2/settings.xml
    - save_cache:
        paths:
        - ~/.m2
        key: dep-cache-{{ checksum "pom.xml" }}
    # Cannot use -o because of snapshot dependencies.
    - run: mvn install -s /tools/m2/settings.xml
    - run:
        name: Save test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
        when: always
    - store_test_results:
        path: ~/junit
    - store_artifacts:
        path: ~/junit
    - persist_to_workspace:
        root: ~/project
        paths:
        - target
        - pom.xml
        - .circleci
  deploy-docker:
    docker:
    - image: $DOCKER_REGISTRY/circleci-toolbox-image-java11
      auth:
        username: _json_key
        password: $DOCKER_PASSWORD
    environment:
      DEBIAN_FRONTEND: "noninteractive"
    steps:
    - attach_workspace:
        at: ~/project
    - restore_cache:
        key: dep-cache-{{ checksum "pom.xml" }}
    - setup_remote_docker:
        docker_layer_caching: true
    - run: *docker-login
    - run:
        name: Docker build and push
        command: mvn docker:build docker:push -s /tools/m2/settings.xml
    - run: *post-hook
workflows:
  version: 2
  build_test_deploy:
    jobs:
    - build:
        context: org-carbon
    - deploy-docker:
        context: org-carbon
        requires:
        - build
        filters:
#          branches:
#            only: master