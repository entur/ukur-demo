version: 2

orbs:
  helm: entur/helm@0.0.1
aliases:
- &GCP-auth
  name: GCP Authenticate
  command: |
    echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
    /tools/gcp_authenticate.sh
- &docker-login
  name: Docker login
  command: |
    echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
    /tools/docker_login.sh
- &post-hook
  name: Notify about build and docker image pushed
  command: |
    echo 'export CIRCLE_PROJECT_REPONAME="$CIRCLE_PROJECT_REPONAME"' >> $BASH_ENV
    echo 'export CIRCLE_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
    echo 'export BUILD_STATUS_API_KEY="$BUILD_STATUS_API_KEY"' >> $BASH_ENV
    /tools/build_notify.sh
- &bump-versions
  name: Bump version in pom file
  command: |
    mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} versions:commit

- &git-push-next-version-release
  name: Push to repository
  command: |
    echo "Trying to tag release-$MAVEN_VERSION"
    git config --global user.email "circleci@entur.org"
    git config --global user.name "EnturCircleCi"
    git tag -a release-$MAVEN_VERSION -m "Tagging current version"
    git add helm/$CIRCLE_PROJECT_REPONAME/Chart.yaml
    git add helm/$CIRCLE_PROJECT_REPONAME/values.yaml
    git add pom.xml
    git commit -m "Helm Update [ci skip]"
    git push --tags --set-upstream origin $CIRCLE_BRANCH

  ### Application version handling
- &get-version-from-pom
  name: Getting version by maven pom version
  command: |
    MVN_VERSION=$(mvn -q \
        -Dexec.executable=echo \
        -Dexec.args='${project.version}' \
        --non-recursive \
        exec:exec)
    echo "export MVN_VERSION=$MVN_VERSION" >> $BASH_ENV

- &set-versions-to-maven-version
  name: Set version in helm dir to $MVN_VERSION
  command: |
    echo "Setting helm versions to $MVN_VERSION"
    pushd helm/$CIRCLE_PROJECT_REPONAME
    sed -i "s/version:.*$/version: '$MVN_VERSION'/g"  ./Chart.yaml
    sed -i "s/appVersion:.*$/appVersion: 'release-$MVN_VERSION'/g"  ./Chart.yaml
    sed -i "s/imageTag:.*$/imageTag: release-$MVN_VERSION/g"  ./values.yaml
    popd

jobs:
  build:
    docker:
    - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
      auth:
        username: _json_key
        password: $GCLOUD_SERVICE_KEY
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
    - checkout
    - restore_cache:
        key: dep-cache-{{ checksum "pom.xml" }}
    - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s /tools/m2/settings.xml
    - save_cache:
        paths:
        - ~/.m2
        key: dep-cache-{{ checksum "pom.xml" }}
    # Cannot use -o because of snapshot dependencies.
    - run: mvn install -s /tools/m2/settings.xml
    - run:
        name: Save test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
        when: always
    - store_test_results:
        path: ~/junit
    - store_artifacts:
        path: ~/junit
    - persist_to_workspace:
        root: ~/project
        paths:
        - target
        - pom.xml
        - .circleci
  deploy-docker:
    docker:
    - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
      auth:
        username: _json_key
        password: $GCLOUD_SERVICE_KEY
    environment:
      DEBIAN_FRONTEND: "noninteractive"
    steps:
    - attach_workspace:
        at: ~/project
    - restore_cache:
        key: dep-cache-{{ checksum "pom.xml" }}
    - setup_remote_docker:
        docker_layer_caching: true
    - run: *GCP-auth
    - run: *docker-login
    - run:
        name: Docker build and push
        command: mvn docker:build docker:push -s /tools/m2/settings.xml
    - run: *post-hook

  prepare-next-release:
      executor: java-11

      steps:
        - checkout
        - attach_workspace:
            at: .
        - add_ssh_keys:
            fingerprints:
              - $SSH_FINGERPRINT
        - run: *bump-versions
        - run: *git-push-next-version-release

workflows:
  version: 2
  build_test_deploy:
    jobs:
    - build:
        context: org-carbon
    - deploy-docker:
        context: org-carbon
        requires:
        - build
        filters:
          branches:
            only: master
    - prepare-next-release:
        requires:
          - deploy-docker