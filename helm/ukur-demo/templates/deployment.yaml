apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ukur-demo.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "ukur-demo.name" . }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        {{- include "common.labels" . | indent 8 }}
    spec:
      serviceAccountName: application

      containers:
        - name: ukur-demo
          image: {{ .Values.image.identifier }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          env:
            - name: JAVA_OPTIONS
            value: -server -Xmx{{ .Values.resources.xmx }} -Dspring.config.additional-location=/etc/application-config/application.properties
            -Dfile.encoding=UTF-8
            - name: TZ
            value: Europe/Oslo
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: health/live
              port: {{ .Values.service.http.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20
          ports:
            - containerPort: {{ .Values.service.http.internalPort }}
              name: http
              protocol: TCP
            - containerPort: 8778
              name: jolokia
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: health/ready
              port: {{ .Values.service.http.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20
          resources:
            limits:
              cpu: {{ .Values.resources.cpuLimit }}
              memory: {{ .Values.resources.memLimit }}
            requests:
              cpu: {{ .Values.resources.cpuRequest }}
              memory: {{ .Values.resources.memRequest }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/application-config
              name: application-config
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: ukur-demo-config
          name: application-config